# -*- coding: utf-8 -*-
"""Proyecto CV-Alchemist.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wJQGNM4nh_R-zK7KRcTe6tyLqLXNUFsj

# 1- Instalaci√≥n y Configuraci√≥n Inicial

Este primer paso prepara nuestro entorno. Instalamos las librer√≠as necesarias para hablar con la API de Gemini y para leer archivos PDF. Luego, configuramos nuestra clave de API de forma segura.
"""

# --- PASO 0: INSTALACI√ìN Y CONFIGURACI√ìN ---

# Instalamos las librer√≠as necesarias de Google y para leer PDFs.
# - google-generativeai: Es el paquete oficial de Google para usar la API de Gemini.
# - PyPDF2: Es una librer√≠a muy popular en Python para leer y manipular archivos PDF.
!pip install -q google-generativeai PyPDF2

# Importamos las librer√≠as que vamos a utilizar a lo largo del proyecto.
import google.generativeai as genai
import PyPDF2
import os
import glob
from google.colab import userdata

print("‚úÖ Librer√≠as instaladas e importadas correctamente.")

# --- Configuraci√≥n de la API Key de Gemini ---
# Para mantener la clave segura, la guardaremos en los "Secrets" de Colab como GEMINI_API_KEY
try:
    api_key = userdata.get('GEMINI_API_KEY')
    genai.configure(api_key=api_key)
    print("üîë API Key de Gemini configurada exitosamente.")
except Exception as e:
    print("üö® Error al configurar la API Key. Aseg√∫rate de haberla guardado correctamente en los 'Secrets' de Colab.")
    print("Error:", e)

"""# 2- Creaci√≥n de Carpetas y Carga de Archivos

Aqu√≠ preparamos el espacio de trabajo. Creamos carpetas para organizar los PDFs y damos instrucciones claras para subir los archivos al entorno de Colab.
"""

# --- PASO 1: PREPARACI√ìN Y CARGA DE DATOS ---

print("üìÇ Creando estructura de carpetas para organizar los archivos...")

# Definimos las rutas para las carpetas que contendr√°n nuestros archivos PDF.
ruta_cv = '/content/cv_base/'
ruta_estudios = '/content/plan_de_estudios/'

# Creamos las carpetas. El `exist_ok=True` evita que d√© un error si la carpeta ya existe.
os.makedirs(ruta_cv, exist_ok=True)
os.makedirs(ruta_estudios, exist_ok=True)

print("\n--- INSTRUCCIONES ---")
print(f"1. En el panel de archivos de la izquierda, busca la carpeta '{ruta_cv}'.")
print("2. Haz clic en los tres puntos y selecciona 'Subir'. Sube aqu√≠ el PDF de tu CV de LinkedIn.")
print(f"\n3. Ahora, busca la carpeta '{ruta_estudios}'.")
print("4. Sube a esta carpeta TODOS los archivos PDF que componen tu nuevo plan de estudios.")
print("\nUna vez que hayas subido los archivos, ejecuta la siguiente celda.")

"""# 3- Extracci√≥n de Texto de los PDFs

Esta celda contiene la "magia" de la lectura. Definimos funciones para abrir los archivos PDF, extraer todo el texto de sus p√°ginas y guardarlo en variables de Python para que Gemini pueda trabajar con √©l.
"""

# --- PASO 2: EXTRACCI√ìN DE TEXTO DE LOS ARCHIVOS PDF ---

# Funci√≥n para extraer texto de un √öNICO archivo PDF.
# Recibe la ruta al archivo, lo abre y devuelve todo su texto.
def extraer_texto_de_pdf(ruta_pdf):
    texto = ""
    try:
        with open(ruta_pdf, 'rb') as archivo:
            lector = PyPDF2.PdfReader(archivo)
            for pagina in lector.pages:
                texto += pagina.extract_text() + "\n"
        return texto
    except Exception as e:
        print(f"Error al leer el archivo {ruta_pdf}: {e}")
        return None

# --- Extracci√≥n del CV Base ---
# Buscamos el archivo PDF dentro de la carpeta del CV.
try:
    archivo_cv = glob.glob(os.path.join(ruta_cv, '*.pdf'))[0]
    cv_base = extraer_texto_de_pdf(archivo_cv)
    if cv_base:
        print(f"‚úÖ Texto del CV extra√≠do exitosamente del archivo: {os.path.basename(archivo_cv)}")
except IndexError:
    print("üö® No se encontr√≥ ning√∫n archivo PDF en la carpeta '/content/cv_base/'. Aseg√∫rate de haberlo subido.")
    cv_base = ""


# --- Extracci√≥n del Plan de Estudios (de M√öLTIPLES archivos) ---
nuevos_estudios = ""
archivos_estudios = sorted(glob.glob(os.path.join(ruta_estudios, '*.pdf')))

if not archivos_estudios:
     print("üö® No se encontraron archivos PDF en la carpeta '/content/plan_de_estudios/'.")
else:
    print(f"\nüìö Procesando {len(archivos_estudios)} archivos del plan de estudios...")
    for archivo in archivos_estudios:
        print(f" - Leyendo {os.path.basename(archivo)}...")
        nuevos_estudios += extraer_texto_de_pdf(archivo) + "\n---\n"
    print("‚úÖ Texto del plan de estudios combinado exitosamente.")

"""# 4- Ingreso de la Descripci√≥n del Puesto

Este es el √∫ltimo dato que necesitamos. Pegar aqu√≠ la descripci√≥n completa del trabajo al que se quiere aplicar. Este texto ser√° crucial para la fase de optimizaci√≥n.
"""

# --- PASO 3: DEFINICI√ìN DE LA FUNCI√ìN DE LLAMADA Y ESTRUCTURACI√ìN DEL PUESTO ---

# --- Parte A: Definici√≥n de la Funci√≥n de Comunicaci√≥n con Gemini ---
# MOVEMOS LA FUNCI√ìN AQU√ç PARA QUE EXISTA ANTES DE USARLA.
# Esta es la funci√≥n reutilizable para llamar a la API de Gemini.
# Incluye l√≥gica para diagnosticar errores comunes.

# Configuramos el modelo de Gemini que vamos a utilizar.
# modelo = genai.GenerativeModel('gemini-1.5-pro-latest')
# modelo = genai.GenerativeModel('gemini-2.5-flash-lite')
modelo = genai.GenerativeModel('gemini-1.5-flash-latest')

def generar_contenido_con_gemini(prompt):
    print("\n‚è≥ Enviando prompt a Gemini... (esto puede tardar unos segundos)")
    try:
        respuesta = modelo.generate_content(prompt)
        print("‚úÖ Respuesta recibida de Gemini.")
        return respuesta.text
    except Exception as e:
        error_str = str(e).lower()
        print(f"üö® Ocurri√≥ un error al llamar a la API de Gemini: {e}")
        if "429" in error_str or "quota" in error_str:
            print("\n--- AN√ÅLISIS DEL ERROR DETECTADO ---")
            print("Este es un error com√∫n de 'L√≠mite de Cuota' (Quota Limit).")
            print("Significa que has alcanzado el l√≠mite de uso de la versi√≥n gratuita de la API por hoy.")
            print("\n**¬øQU√â HACER?**")
            print("1. **Opci√≥n Gratuita:** Esperar a que tu cuota se reinicie (generalmente a la medianoche, hora del Pac√≠fico).")
            print("2. **Opci√≥n Inmediata:** Habilitar la facturaci√≥n en tu proyecto de Google Cloud.")
        else:
            print("\n--- AN√ÅLISIS DEL ERROR ---")
            print("Este parece ser un error diferente. Revisa el mensaje anterior para m√°s detalles.")
        return None

# --- Parte B: Ingreso del Texto en Bruto del Puesto ---
descripcion_puesto_bruta = """
Analista de Datos para Pagos Digitales
Provincia de Buenos Aires, Argentina ¬∑ hace 3 d√≠as ¬∑ M√°s de 100 personas han hecho clic en ¬´Solicitar¬ª
Promocionado por t√©cnico de selecci√≥n ¬∑ Respuestas gestionadas fuera de LinkedIn
H√≠brido  Jornada completa  Algo de responsabilidad
Requisitos
Aptitudes asociadas al empleo
Se han encontrado 4 aptitudes en tu perfil que coinciden con las aptitudes asociadas al anuncio de empleo. M√°s informaci√≥n
Obt√©n m√°s informaci√≥n sobre las coincidencias de aptitudes
Conocimientos comerciales
Ingenier√≠a
Microsoft Excel
SQL
Chat
Empresas
Finanzas
Investigaciones de fraude
Seguros
Servicios financieros
Acerca del empleo
En Mercado Libre estamos democratizando el comercio y los servicios financieros para transformar la vida de las personas de Am√©rica Latina. ¬°Sumate a este prop√≥sito!
Prevenci√≥n de Fraude es la direcci√≥n de referencia interna y externa sobre todos los temas de seguridad para transacciones, dentro del ecosistema de Mercado Libre. Garantizamos la seguridad de las operaciones de las personas que utilizan nuestra plataforma, a partir de la aplicaci√≥n de herramientas, modelos anal√≠tico-predictivos y tecnolog√≠as innovadoras. Somos el √°rea de la compa√±√≠a que permite asumir riesgos y crecer a una alta velocidad.
Dentro del equipo, debemos ser capaces de co-crear productos seguros y poner en acci√≥n el profundo conocimiento del ecosistema, para encontrar las debilidades y actuar proactivamente por medio de la tecnolog√≠a, los procesos y las personas, con el fin de brindar una experiencia confiable que genere valor a quienes utilizan nuestros servicios.
Tenemos un desaf√≠o para quienes:
Vibran energ√≠a emprendedora: se mueven por la curiosidad, nunca se rinden y se enfocan en superar sus propios l√≠mites.
Dan el m√°ximo porque les gusta trabajar con compromiso y dedicaci√≥n.
Viven los cambios como oportunidades y aprenden de sus errores.
La excelencia y la ejecuci√≥n son claves en su forma de hacer las cosas.
Promueven el buen clima, aportan alegr√≠a y diversi√≥n.
Saben c√≥mo construir con otras personas y disfrutan trabajando en equipo.
Imaginate emprendiendo proyectos desafiantes, din√°micos e innovadores y siendo responsable de:
Trabajar junto a los equipos de Machine Learning, Negocio y Producto, entre otros, con el objetivo de lograr sinerias con impacto positivo en el negocio, asegurando un excelente clima laboral.
Analizar grandes vol√∫menes de datos a fin de obtener insights y tomar decisiones, en pos de reducir el riesgo de fraude y generar un impacto positivo en el negocio
Realizar an√°lisis a nivel transaccional, para entender patrones, generar cuantificaciones e implementar soluciones que mejoren la eficiencia de nuestras acciones.
Detectar desv√≠os en KPIs, buscar la causa ra√≠z del problema e implementar cambios que reviertan la tendencia.
Colaborar con el resto de los equipos de Prevenci√≥n de Fraude para crear y robustecer los scores transaccionales para minimizar la p√©rdida financiera de Mercado Libre o de sus usuarios.
Requisitos:
Tener formaci√≥n avanzada (preferentemente finalizada) en Ingenier√≠a, Econom√≠a, Ciencias Actuariales, o carreras afines.
Poseer conocimiento en SQL y Excel.
Contar con conocimientos en Python, u otras herramientas de explotaci√≥n y an√°lisis de datos, as√≠ como tambi√©n nociones b√°sicas del uso de herramientas de IA (Chat GPT, Gemini, Cursor, entre otras).
Te proponemos:
Ser parte de una compa√±√≠a con esp√≠ritu emprendedor en la que nos encanta pensar en grande y a largo plazo.
Ser protagonista de tu desarrollo en un ambiente de oportunidades, aprendizaje, crecimiento, expansi√≥n y proyectos desafiantes.
Compartir y aprender en equipo junto a grandes profesionales y especialistas.
Un excelente clima de trabajo, con todo lo necesario para que vivas una gran experiencia. :)
"""

# --- Parte C: Prompt de Estructuraci√≥n ---
prompt_estructurador = f"""
Act√∫a como un analista de datos experto en Recursos Humanos. Tu tarea es tomar el siguiente texto de una descripci√≥n de puesto, que est√° desordenado y contiene informaci√≥n irrelevante, y estructurarlo de forma clara y concisa.
Tu misi√≥n es extraer la informaci√≥n esencial y organizarla en las siguientes secciones:
- T√≠tulo del Puesto
- Empresa
- √Årea
- Resumen del Rol
- Perfil Buscado (Soft Skills)
- Responsabilidades Clave
- Requisitos T√©cnicos
**Reglas de formato:**
1.  Usa t√≠tulos en negrita para cada secci√≥n (ej. `**T√≠tulo del Puesto:**`).
2.  Usa listas con guiones (`- `) para los puntos dentro de las secciones de perfil, responsabilidades y requisitos.
3.  S√© conciso y elimina informaci√≥n superflua como "hace 3 d√≠as", "Promocionado por...", "¬°Sumate a este prop√≥sito!", o frases gen√©ricas de marketing que no describan el rol o los requisitos.
4.  Si no encuentras informaci√≥n para una secci√≥n espec√≠fica, om√≠tela del resultado final.
Aqu√≠ est√° el texto en bruto para procesar:
---
{descripcion_puesto_bruta}
---
Devuelve √∫nicamente el texto estructurado, sin a√±adir comentarios ni introducciones.
"""

# --- Parte D: Ejecuci√≥n y Almacenamiento ---
print("‚öôÔ∏è Estructurando la descripci√≥n del puesto con Gemini...")

descripcion_puesto_estructurada = generar_contenido_con_gemini(prompt_estructurador)
descripcion_puesto = descripcion_puesto_estructurada

if descripcion_puesto:
    print("\n\n--- DESCRIPCI√ìN DEL PUESTO ESTRUCTURADA ---")
    print("Gemini ha limpiado y formateado la descripci√≥n del puesto. Este es el texto que se usar√° para la optimizaci√≥n:")
    print("--------------------------------------------------")
    print(descripcion_puesto)
    print("--------------------------------------------------")
    print("\n‚úÖ Descripci√≥n del puesto estructurada y guardada. ¬°Listos para la alquimia!")
else:
    print("üö® No se pudo estructurar la descripci√≥n del puesto. El proceso se detendr√°.")

"""# 5- El Coraz√≥n del Alquimista - Prompts y Llamada a Gemini

Aqu√≠ es donde definimos nuestras "recetas alqu√≠micas": los prompts. Creamos las instrucciones precisas para Gemini. Tambi√©n definimos una funci√≥n que se encargar√° de enviar el prompt a la IA y devolvernos su respuesta.
"""

# --- PASO 4: INGENIER√çA DE PROMPTS PARA LA CREACI√ìN DEL CV ---

# Aqu√≠ nos centramos en crear las plantillas de los prompts que la usar√°n.

# --- PROMPT 1: Creaci√≥n del "CV Maestro Actualizado" ---
prompt_actualizacion = f"""
Act√∫a como un experto redactor de CVs y orientador profesional de alto nivel.
Tu tarea es analizar dos documentos: el CV base de un candidato y el contenido de un nuevo programa de estudios que ha completado.
Tu misi√≥n es crear una nueva versi√≥n del CV, un "CV Maestro", que integre de forma profesional y coherente la nueva formaci√≥n.
No te limites a a√±adir una nueva secci√≥n; si es necesario, reestructura el CV, mejora la redacci√≥n del resumen profesional para reflejar las nuevas habilidades y aseg√∫rate de que el resultado sea un documento pulido, profesional y actualizado.
A continuaci√≥n, los documentos:
--- INICIO DEL CV BASE ---
{cv_base}
--- FIN DEL CV BASE ---
--- INICIO DEL PROGRAMA DE ESTUDIOS ---
{nuevos_estudios}
--- FIN DEL PROGRAMA DE ESTUDIOS ---
Devuelve √∫nicamente el texto completo del CV actualizado, sin incluir encabezados, introducciones o comentarios adicionales. El formato debe ser texto plano.
"""

# --- PROMPT 2: Creaci√≥n del "CV Optimizado para la B√∫squeda" ---
# Este prompt se crear√° din√°micamente en la siguiente celda (Paso 5),
# una vez que tengamos el resultado del primer prompt.

"""# 6- Ejecuci√≥n del Proceso y Obtenci√≥n de Resultados

¬°El gran final! Ejecutamos el flujo de trabajo. Primero, llamamos a Gemini con el primer prompt para obtener el CV Maestro. Luego, usamos ese resultado para construir el segundo prompt y volver a llamar a Gemini para obtener el CV final y optimizado. Los resultados se imprimir√°n en pantalla.
"""

# --- PASO 5: EJECUCI√ìN DEL PROCESO ALQU√çMICO ---

# --- ETAPA 1: Generar el CV Maestro Actualizado ---
print("**************************************************")
print("*     INICIANDO ETAPA 1: Creaci√≥n del CV Maestro     *")
print("**************************************************")

cv_maestro_actualizado = generar_contenido_con_gemini(prompt_actualizacion)

if cv_maestro_actualizado:
    print("\n\n\n--- SALIDA 1: CV MAESTRO ACTUALIZADO ---")
    print("Este es tu nuevo CV base, con tu formaci√≥n m√°s reciente integrada. Puedes guardarlo para futuras postulaciones.")
    print("--------------------------------------------------")
    print(cv_maestro_actualizado)
    print("--------------------------------------------------\n\n\n")

    # --- ETAPA 2: Generar el CV Optimizado para el Puesto ---
    print("**************************************************")
    print("* INICIANDO ETAPA 2: Optimizaci√≥n para el Puesto *")
    print("**************************************************")

    # Construimos el segundo prompt AHORA, usando el resultado del primero.
    prompt_optimizacion = f"""
    Act√∫a como un 'Career Coach' y experto en reclutamiento t√©cnico, especializado en optimizar CVs para pasar filtros ATS y destacar ante los managers de contrataci√≥n.

    Tu proceso de pensamiento debe ser el siguiente:
    1.  **An√°lisis Comparativo del Candidato:** Primero, analiza detenidamente el 'CV Maestro' proporcionado. Identifica el nivel de seniority del candidato (Junior, Semi-Senior, Senior) en su campo principal. Luego, comp√°ralo con la descripci√≥n del puesto. ¬øEl candidato est√° aplicando a un puesto en su mismo campo o est√° intentando una transici√≥n de carrera a un nuevo campo?
    2.  **Identificaci√≥n de la Estrategia:** Basado en tu an√°lisis anterior, define la mejor estrategia.
        *   **Si es una transici√≥n de carrera:** La estrategia es posicionar las habilidades del campo anterior como una base s√≥lida y relevante, mientras se destacan las nuevas competencias (adquiridas por estudios o proyectos) para el nuevo campo. La honestidad sobre la falta de experiencia profesional *directa* en el nuevo rol es crucial.
        *   **Si es en el mismo campo:** La estrategia es alinear directamente la experiencia pasada con los requisitos del puesto, utilizando las palabras clave y tecnolog√≠as de la oferta de trabajo.

    **Tu Tarea Principal:**
    Una vez completado tu an√°lisis interno, transforma el 'CV Maestro' en una versi√≥n perfectamente alineada con la oferta de trabajo, aplicando la estrategia que identificaste.

    **Reglas Cr√≠ticas de Ejecuci√≥n:**
    - **No inventes experiencia:** Basa toda la informaci√≥n en los hechos presentes en el CV. No conviertas la formaci√≥n acad√©mica o los proyectos personales en experiencia laboral profesional.
    - **S√© preciso y honesto:** Refleja el nivel real de experiencia del candidato. El objetivo es reformular y destacar lo que ya existe para que sea m√°s atractivo, no mentir.
    - **Optimiza para ATS:** Integra de forma natural las palabras clave, tecnolog√≠as y habilidades (blandas y duras) de la descripci√≥n del puesto en el resumen profesional, las experiencias y la secci√≥n de habilidades.

    Documentos para tu an√°lisis:
    --- INICIO DEL CV MAESTRO ---
    {cv_maestro_actualizado}
    --- FIN DEL CV MAESTRO ---

    --- INICIO DE LA DESCRIPCI√ìN DEL PUESTO ---
    {descripcion_puesto}
    --- FIN DE LA DESCRIPCI√ìN DEL PUESTO ---

    Devuelve como resultado final √∫nicamente el texto del CV optimizado, listo para ser copiado y pegado en una plantilla de dise√±o. No incluyas comentarios, explicaciones ni encabezados.
    """

    cv_final_optimizado = generar_contenido_con_gemini(prompt_optimizacion)

    if cv_final_optimizado:
        print("\n\n\n--- SALIDA 2: CV FINAL OPTIMIZADO (¬°LISTO PARA ENVIAR!) ---")
        print("¬°Misi√≥n cumplida! Este es tu CV transformado y optimizado para la oferta de trabajo. C√≥pialo y p√©galo en una plantilla de dise√±o profesional (como Canva) para darle el formato final.")
        print("==================================================")
        print(cv_final_optimizado)
        print("==================================================")
else:
    # Si la Etapa 1 falla, la variable 'cv_maestro_actualizado' estar√° vac√≠a.
    # Este bloque detiene el proceso para evitar errores y gu√≠a al usuario al diagn√≥stico ya impreso.
    print("\nüö® No se pudo continuar a la Etapa 2 porque la Etapa 1 fall√≥. Revisa el an√°lisis del error detallado arriba para ver los siguientes pasos.")